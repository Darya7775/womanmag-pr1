section.component-description(data-tabs='element')
  p Модальные окна полностью переписаны, сейчас используется делегирование как при открытии так и в самом модальном окне. Как следствие отсутствуют проблемы с динамическим добавлением элементов: кнопок вызова и самих модальных окон
  p В файле #[b init-modals.js] создаётся экземпляр класса #[b Modals] который записывается в переменную modals, им вы можете пользоваться по проекту при необходимости, так же он записывается в window.modals.
  p #[b Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда]
  p Модальные окна состоят из следующих файлов: #[b ios-checker.js], #[b focus-lock.js], #[b scroll-lock.js], #[b modals.js], #[b init-modals.js], и #[b modal.scss] все файлы обязательны к переносу в проект! Так же у вас в проекте должно находится два утилитарных класса для блокировки страницы:
  pre
    |
    code(class="language-css").
      .scroll-lock-ios {
        position: fixed;

        overflow: hidden;
      }

      .scroll-lock {
        overflow: hidden;
      }
  h2.subtitle Обязательные data атрибуты
  table
    tr
      th
        p data-open-modal="Имя модального окна"
      td
        p Устанавливается на кнопке вызова модального окна
    tr
      th
        p data-modal="Имя модального окна"
      td
        p Устанавливается на модальном окне
    tr
      th
        p data-close-modal
      td
        p Устанавливается на элементе который должен закрыть модальное окно, по умолчанию установлен на оверлее и на кнопки закрытия, может добавлятся на любые элементы в модальном окне.
  h2.subtitle Не обязательные data атрибуты
  table
    tr
      th
        p data-focus
      td
        p Устанавливается на том элементе который при открытии модального окна должен попасть в фокус, если не установить то в фокус попадёт первый интерактивный элемент в модальном окне. Данный data атрибут не относится к модулю модальных окон, он относится к модулю блокировки фокуса внутри модального окна
    tr
      th
        p data-close-modal="back"
      td
        p Устанавливается на элементе который должен вернуть к ранее закрытому модальному окну
  h2.subtitle Настройки
  p При создании экземпляра класса передаются настройки в формате ключ - "Имя модального окна" значение - объект
  p По умолчанию работают настройки по умолчанию. На всех ссылках и кнопках по умолчанию стоит #[b preventDefault]
  table
    tr
      th
        p stopPlay
      td
        p Остановка проигрывание стандартных HTML элементов video и audio, по умолчанию true
    tr
      th
        p lockFocus
      td
        p Блокировка фокуса внутри модального окна, по умолчанию #[b true]. Если внутри модального окна нет фокусируемых элементов то при нажатии на клавишу tab или сочетание shift + tab действие по умолчанию будет отменено. Если внутри модального окна есть только один фокусируемый элемент то при нажатии на клавишу tab или сочетание shift + tab фокус с него уходить не будет.
    tr
      th
        p startFocus
      td
        p Блокировка фокуса внутри модального окна, по умолчанию true. Если поставить false то при открытии ни один из элементов модального окна не попадёт в фокус
    tr
      th
        p focusBack
      td
        p При закрытии модального окна возвращает фокус на тот элемент который находился в фокусе перед открытием модального окна, по умолчанию true
    tr
      th
        p eventTimeout
      td
        p Таймаут который отрабатывает при разблокировке скрола при закрытии, по умолчанию 400мс, добавлен для того что бы сгладить появление полосы прокрутки, убрать дёрганье модального окна + через данный таймаут снимаются и вешаются обработчики на модальное окно и документ это сделано для того что бы убрать баги связанные с добавлением лока фокуса внутри модального окна так как при зажатой клавише enter и при фокусе кнопки закрытия в модальном окне оно начинает открываться и закрываться что приводит к багам с появлением полосы прокрутки и тд
    tr
      th
        p resetScrollPos
      td
        p Сбрасывает положение прокрутки модалки при повторном открытии
    tr
      th
        p openCallback
      td
        p Callback при открытии, по умолчанию false
    tr
      th
        p closeCallback
      td
        p Callback при закрытии, по умолчанию false
  pre
    |
    code(class="language-js").
      const settings = {
        'default': {
          preventDefault: true,
          stopPlay: true,
          lockFocus: true,
          resetScrollPos: false,
          eventTimeout: 400,
          openCallback: false,
          closeCallback: false,
        },
        // modal-1 добавлен исключительно для примера при добавлении на проект ключ и обект записанный в нём нужно удалить
        'modal-1': {
          openCallback: () => console.log('Я отработаю при открытии modal-1'),
          closeCallback: () => console.log('Я отработаю при закрытии modal-1'),
        },
      };
  h2.subtitle Методы
  table
    tr
      th
        p modals.open("Имя модального окна")
      td
        p Открывает переданное модальное окно
    tr
      th
        p modals.close("Имя модального окна")
      td
        p Закрывает переданное модальное окно
  h2.subtitle Дополнения
  p Так же в файле инициализации есть закомментированный код. Он добавлен для открытия нового модального окна из колбэка закрытия. Судьба его пока не известна, так как кейс крайне редкий и все случаи которые пока были на практике перекрывает метод modals.open('Имя модального окна'), например показ модального окна с сообщением об успешной отправки формы в случае если сама форма находилась в модальном окне
  pre
    |
    code(class="language-js").
      // Здесь реализован пример открытия модалки через колбэк закрытия
      // const openModalInCloseCallback = (name, context = this) => {
      //   context._enableScrolling = false;
      //   context._setSettings('default');
      //   modals.open(name);
      // };

      // closeCallback() {
      //   openModalInCloseCallback('modal-5');
      // },
  h2.subtitle Добавление Youtube видео
  p Добавлена автоматическая остановка воспроизведения Youtube видео и при необходимости автозапуск воспроизведения при открытии
  p Для корректной работы #[b iframe] должен быть обёрнут в #[b div] с дата атрибутом #[b data-iframe].
  p #[b Важно!!!] в src iframe в конце должно быть дописано #[b ?enablejsapi=1].
  p Полный пример src: #[b src="https://www.youtube.com/embed/FmzHq3U0UFE?enablejsapi=1"]. Примеры в модальных окнах 4 и 5
  p Для автовоспроизведения #[b div] нужно добавить дата атрибут #[b data-auto-play]. Пример в модальном окне 5
